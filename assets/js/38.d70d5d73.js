(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{317:function(a,r,s){"use strict";s.r(r);var t=s(13),e=Object(t.a)({},(function(){var a=this,r=a._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"图形图像处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#图形图像处理"}},[a._v("#")]),a._v(" 图形图像处理")]),a._v(" "),r("h2",{attrs:{id:"html2canvas"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#html2canvas"}},[a._v("#")]),a._v(" html2canvas")]),a._v(" "),r("p",[a._v("html2canvas 的作用就是允许让我们直接在用户浏览器上拍摄网页或其部分的“截图”。")]),a._v(" "),r("p",[a._v("它的屏幕截图是基于 DOM 的，因此可能不会 100% 精确到真实的表示，因为它不会生成实际的屏幕截图，而是基于页面上可用的信息构建屏幕截图。")]),a._v(" "),r("h2",{attrs:{id:"dom-to-image"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dom-to-image"}},[a._v("#")]),a._v(" dom-to-image")]),a._v(" "),r("p",[r("a",{attrs:{href:"http://html2canvas.hertzen.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://html2canvas.hertzen.com/"),r("OutboundLink")],1)]),a._v(" "),r("p",[a._v("dom转图片")]),a._v(" "),r("h2",{attrs:{id:"pica"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pica"}},[a._v("#")]),a._v(" pica")]),a._v(" "),r("p",[a._v("pica 可在浏览器上实现高质量而且高性能的图片大小调整JS库，目标是在浏览器中以最快的速度进行高品质图像缩放。它会从web-workers，web assembly，createImageBitmap和纯JS中自动选择最佳的可用技术。")]),a._v(" "),r("p",[a._v("Pica是一个执行数学计算的底层开发库，尽可能地减少了封装带来的影响。如果对二进制图像进行缩放，需要先加载到canvas（再保存为blob）。")]),a._v(" "),r("h2",{attrs:{id:"lena-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lena-js"}},[a._v("#")]),a._v(" Lena.js")]),a._v(" "),r("p",[a._v("该库主要为图片添加过滤器。")]),a._v(" "),r("h2",{attrs:{id:"compressor-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#compressor-js"}},[a._v("#")]),a._v(" Compressor.js")]),a._v(" "),r("p",[a._v("Compressor.js 一个Javascript图像压缩器。 使用浏览器的原生canvas.toBlob API来执行压缩工作，这意味着它是有损压缩。 一般使用此方法在客户端上传图像文件之前对其进行预压缩。")]),a._v(" "),r("h2",{attrs:{id:"fabric-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fabric-js"}},[a._v("#")]),a._v(" Fabric.js")]),a._v(" "),r("p",[a._v("Fabric是一个强大而简单的JS Canvas库，我们能通过使用它实现在Canvas上创建、填充图形、给图形填充渐变颜色。 组合图形（包括组合图形、图形文字、图片等）等一系列功能。简单来说我们可以通过使用Fabric从而以较为简单的方式实现较为复杂的Canvas功能")]),a._v(" "),r("h2",{attrs:{id:"blurify"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#blurify"}},[a._v("#")]),a._v(" Blurify")]),a._v(" "),r("p",[a._v("blurify.js是一款小巧实用的js图片模糊效果插件。使用该js插件可以将任意图片进行模糊处理。")]),a._v(" "),r("h2",{attrs:{id:"d3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#d3"}},[a._v("#")]),a._v(" D3")]),a._v(" "),r("p",[a._v("D3js 是一个可以基于数据来操作文档的 JvaScript 库。可以帮助你使用 HTML, CSS, SVG 以及 Canvas 来展示数据。\n支持自由度较高得需求")]),a._v(" "),r("h2",{attrs:{id:"three-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#three-js"}},[a._v("#")]),a._v(" Three.js")]),a._v(" "),r("p",[a._v("Three.js是基于原生WebGL封装运行的三维引擎，在所有WebGL引擎中，Three.js是国内文资料最多、使用最广泛的三维引擎。")]),a._v(" "),r("h2",{attrs:{id:"chart-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#chart-js"}},[a._v("#")]),a._v(" Chart.js")]),a._v(" "),r("p",[a._v("art.js是用JavaScript编写的基于Canvas的开源图表库")]),a._v(" "),r("h2",{attrs:{id:"merge-images"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#merge-images"}},[a._v("#")]),a._v(" merge-images")]),a._v(" "),r("p",[a._v("合并图片")]),a._v(" "),r("h2",{attrs:{id:"corpperjs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#corpperjs"}},[a._v("#")]),a._v(" corpperjs")]),a._v(" "),r("p",[a._v("用于图片裁剪")]),a._v(" "),r("h2",{attrs:{id:"grade"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#grade"}},[a._v("#")]),a._v(" Grade")]),a._v(" "),r("p",[a._v("Grade 是一个 JavaScript 库，作用是从图像中提取前2个主要颜色产生互补的渐变。")])])}),[],!1,null,null,null);r.default=e.exports}}]);