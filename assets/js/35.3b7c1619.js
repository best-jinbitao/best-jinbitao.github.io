(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{318:function(t,s,a){"use strict";a.r(s);var e=a(13),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"网络请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络请求"}},[t._v("#")]),t._v(" 网络请求")]),t._v(" "),s("h2",{attrs:{id:"axios"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#axios"}},[t._v("#")]),t._v(" Axios")]),t._v(" "),s("p",[t._v("Axios，是一个基于promise的网络请求库，作用于node.js和浏览器中，它是 isomorphic 的(即同一套代码可以运行在浏览器和node.js中)。")]),t._v(" "),s("h2",{attrs:{id:"superagent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#superagent"}},[t._v("#")]),t._v(" Superagent")]),t._v(" "),s("p",[t._v("是一个轻量的 Ajax API，服务器端（Node.js）客户端（浏览器端）均可使用，SuperAgent 具有学习曲线低、使用简单、可读性好的特点，可作为客户端请求代理模块使用，当你想处理 get,post,put,delete,head 请求时，可以考虑使用 SuperAgent。")]),t._v(" "),s("h2",{attrs:{id:"fly-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fly-js"}},[t._v("#")]),t._v(" fly.js")]),t._v(" "),s("p",[t._v("一个支持所有JavaScript运行环境的基于Promise的、支持请求转发、强大的http请求库。可以让您在多个端上尽可能大限度的实现代码复用。其兼容性是它一大优势。")])])}),[],!1,null,null,null);s.default=r.exports}}]);